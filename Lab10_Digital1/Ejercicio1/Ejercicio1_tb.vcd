$date
	Sat Nov 07 23:24:12 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 4 ! Operando [3:0] $end
$var wire 4 " Instruccion [3:0] $end
$var reg 1 # Enable $end
$var reg 1 $ clk $end
$var reg 1 % enable $end
$var reg 12 & load [11:0] $end
$var reg 1 ' nonB $end
$var reg 1 ( reset $end
$scope module unition $end
$var wire 1 # Enable $end
$var wire 1 $ clk $end
$var wire 1 % enable $end
$var wire 12 ) load [11:0] $end
$var wire 1 ' nonB $end
$var wire 1 ( reset $end
$var wire 8 * in_B [7:0] $end
$var wire 12 + in_A [11:0] $end
$var wire 4 , Operando [3:0] $end
$var wire 4 - Instruccion [3:0] $end
$scope module c12 $end
$var wire 1 $ clk $end
$var wire 1 % enable $end
$var wire 12 . load [11:0] $end
$var wire 1 ' nonB $end
$var wire 1 ( reset $end
$var reg 12 / Qc [11:0] $end
$upscope $end
$scope module fetch $end
$var wire 1 # Enable $end
$var wire 1 $ clk $end
$var wire 1 ( reset $end
$var wire 4 0 Operando [3:0] $end
$var wire 4 1 Instruccion [3:0] $end
$var wire 8 2 D_4 [7:0] $end
$scope module ffd4b_1 $end
$var wire 4 3 D [3:0] $end
$var wire 1 $ clk $end
$var wire 1 # enable $end
$var wire 1 ( reset $end
$var reg 4 4 Q [3:0] $end
$upscope $end
$scope module ffd4b_2 $end
$var wire 4 5 D [3:0] $end
$var wire 1 $ clk $end
$var wire 1 # enable $end
$var wire 1 ( reset $end
$var reg 4 6 Q [3:0] $end
$upscope $end
$upscope $end
$scope module mrom $end
$var wire 8 7 Datos [7:0] $end
$var wire 12 8 Lectura [11:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
x(
x'
bx &
x%
1$
x#
bx "
bx !
$end
#1
b0 &
b0 )
b0 .
0#
0'
0%
0(
0$
#2
1$
#3
b1 5
b1001 3
b10010001 *
b10010001 2
b10010001 7
b0 +
b0 /
b0 8
b0 "
b0 -
b0 1
b0 4
b0 !
b0 ,
b0 0
b0 6
0$
1(
#4
1$
#5
0$
1%
0(
#6
b11 5
b0 3
b11 *
b11 2
b11 7
b1 +
b1 /
b1 8
1$
#7
0$
1#
#8
b1100 5
b100 3
b1001100 *
b1001100 2
b1001100 7
b10 +
b10 /
b10 8
b11 !
b11 ,
b11 0
b11 6
1$
#9
b1011 5
b1101 3
b11011011 *
b11011011 2
b11011011 7
b11 +
b11 /
b11 8
0$
1'
#10
b1 5
b0 3
b1 *
b1 2
b1 7
b100 +
b100 /
b100 8
b1101 "
b1101 -
b1101 1
b1101 4
b1011 !
b1011 ,
b1011 0
b1011 6
1$
#11
0$
b1001 &
b1001 )
b1001 .
#12
b1111 5
b1011 3
b10111111 *
b10111111 2
b10111111 7
b101 +
b101 /
b101 8
b1 !
b1 ,
b1 0
b1 6
b0 "
b0 -
b0 1
b0 4
1$
#13
0$
b1 &
b1 )
b1 .
#14
b0 5
b1111 3
b11110000 *
b11110000 2
b11110000 7
b110 +
b110 /
b110 8
b1011 "
b1011 -
b1011 1
b1011 4
b1111 !
b1111 ,
b1111 0
b1111 6
1$
#15
0$
b1001 &
b1001 )
b1001 .
0'
#16
b1010 5
b1010 3
b10101010 *
b10101010 2
b10101010 7
b111 +
b111 /
b111 8
b0 !
b0 ,
b0 0
b0 6
b1111 "
b1111 -
b1111 1
b1111 4
1$
#17
0$
#18
b111 5
b101 3
b1010111 *
b1010111 2
b1010111 7
b1000 +
b1000 /
b1000 8
b1010 "
b1010 -
b1010 1
b1010 4
b1010 !
b1010 ,
b1010 0
b1010 6
1$
#19
0$
#20
b11 5
b1100 3
b11000011 *
b11000011 2
b11000011 7
b1001 +
b1001 /
b1001 8
b111 !
b111 ,
b111 0
b111 6
b101 "
b101 -
b101 1
b101 4
1$
